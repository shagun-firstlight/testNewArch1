buildscript {
    ext.safeExtGet = {prop, fallback ->
        rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }
    repositories {
        google()
	gradlePluginPortal()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:7.0.4")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10")
    }
}



def isNewArchitectureEnabled() {
    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'kotlin-android'

if (isNewArchitectureEnabled()) {
    apply plugin: 'com.facebook.react'
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 31)

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 21)
        targetSdkVersion safeExtGet('targetSdkVersion', 31)
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
    }

    sourceSets {
        main {
            if (isNewArchitectureEnabled()) {
                java.srcDirs += ['src/newarch']
            } else {
                java.srcDirs += ['src/oldarch']
            }
        }
    }
}

repositories {
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$projectDir/../node_modules/react-native/android"
    }
    mavenCentral()
    google()
    maven {
            url "https://firstlight.jfrog.io/artifactory/fl-android-sdk-libs-release"
            credentials {
                username = "${rootProject.jFrogUser}"
                password = "${rootProject.jFrogPassword}"
            }
        }
    maven {
        url "https://firstlight.jfrog.io/artifactory/fl-android-sdk-libs-snapshot"
        credentials {
            username = "${rootProject.jFrogUser}"
            password = "${rootProject.jFrogPassword}"
        }
    }
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    implementation "com.quickplay.vstb7:fl-foundation:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-platform-core:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-player-interface:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-content-auth:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-player:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-player-ads-ima:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-platform-player:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-favourites-service:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-stream-concurrency:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-bookmarks-service:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-cast:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:fl-heartbeat:${QP_LIBRARY_VERSION}"
    implementation "com.quickplay.vstb7:qp-rn-core-android:${QP_RN_LIBRARY_VERSION}"
}

if (isNewArchitectureEnabled()) {
    react {
        jsRootDir = file("../src/")
        libraryName = "player"
        codegenJavaPackageName = "com.rnnewarchitecturelibrary"
    }
}
